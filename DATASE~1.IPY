{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import PowerTransformer\n",
    "from sklearn.metrics import recall_score\n",
    "from sklearn.metrics import roc_curve\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn import metrics\n",
    "from matplotlib import pyplot\n",
    "df = pd.read_csv('EEG_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df.drop(df[df['SubjectID'] == 6.0].index, inplace = True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Attention</th>\n",
       "      <th>Mediation</th>\n",
       "      <th>Raw</th>\n",
       "      <th>Delta</th>\n",
       "      <th>Theta</th>\n",
       "      <th>Alpha1</th>\n",
       "      <th>Alpha2</th>\n",
       "      <th>Beta1</th>\n",
       "      <th>Beta2</th>\n",
       "      <th>Gamma1</th>\n",
       "      <th>Gamma2</th>\n",
       "      <th>user-definedlabeln</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>56.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>278.0</td>\n",
       "      <td>301963.0</td>\n",
       "      <td>90612.0</td>\n",
       "      <td>33735.0</td>\n",
       "      <td>23991.0</td>\n",
       "      <td>27946.0</td>\n",
       "      <td>45097.0</td>\n",
       "      <td>33228.0</td>\n",
       "      <td>8293.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>-50.0</td>\n",
       "      <td>73787.0</td>\n",
       "      <td>28083.0</td>\n",
       "      <td>1439.0</td>\n",
       "      <td>2240.0</td>\n",
       "      <td>2746.0</td>\n",
       "      <td>3687.0</td>\n",
       "      <td>5293.0</td>\n",
       "      <td>2740.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>47.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>758353.0</td>\n",
       "      <td>383745.0</td>\n",
       "      <td>201999.0</td>\n",
       "      <td>62107.0</td>\n",
       "      <td>36293.0</td>\n",
       "      <td>130536.0</td>\n",
       "      <td>57243.0</td>\n",
       "      <td>25354.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>47.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>-5.0</td>\n",
       "      <td>2012240.0</td>\n",
       "      <td>129350.0</td>\n",
       "      <td>61236.0</td>\n",
       "      <td>17084.0</td>\n",
       "      <td>11488.0</td>\n",
       "      <td>62462.0</td>\n",
       "      <td>49960.0</td>\n",
       "      <td>33932.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>44.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>-8.0</td>\n",
       "      <td>1005145.0</td>\n",
       "      <td>354328.0</td>\n",
       "      <td>37102.0</td>\n",
       "      <td>88881.0</td>\n",
       "      <td>45307.0</td>\n",
       "      <td>99603.0</td>\n",
       "      <td>44790.0</td>\n",
       "      <td>29749.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Attention  Mediation    Raw      Delta     Theta    Alpha1   Alpha2  \\\n",
       "0       56.0       43.0  278.0   301963.0   90612.0   33735.0  23991.0   \n",
       "1       40.0       35.0  -50.0    73787.0   28083.0    1439.0   2240.0   \n",
       "2       47.0       48.0  101.0   758353.0  383745.0  201999.0  62107.0   \n",
       "3       47.0       57.0   -5.0  2012240.0  129350.0   61236.0  17084.0   \n",
       "4       44.0       53.0   -8.0  1005145.0  354328.0   37102.0  88881.0   \n",
       "\n",
       "     Beta1     Beta2   Gamma1   Gamma2  user-definedlabeln  \n",
       "0  27946.0   45097.0  33228.0   8293.0                 0.0  \n",
       "1   2746.0    3687.0   5293.0   2740.0                 0.0  \n",
       "2  36293.0  130536.0  57243.0  25354.0                 0.0  \n",
       "3  11488.0   62462.0  49960.0  33932.0                 0.0  \n",
       "4  45307.0   99603.0  44790.0  29749.0                 0.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(['SubjectID', 'VideoID', 'predefinedlabel'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.drop('user-definedlabeln',axis=1).values\n",
    "y = df['user-definedlabeln'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#pt = PowerTransformer()\n",
    "#X_pt = pt.fit_transform(X)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RandomForest\n",
      "____________________________\n",
      "Accuracy: 0.660006244146113\n",
      "Precision: 0.6542111506524317\n",
      "Recall: 0.6855189558732132\n",
      "F1 Score: 0.6694992412746585\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[1011  583]\n",
      " [ 506 1103]]\n",
      "____________________________\n",
      "False Positive Rate: 0.3657465495608532\n",
      "False Negative Rate: 0.3144810441267868\n",
      "____________________________\n",
      "AUC: 0.7257572484760674\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "rfc=RandomForestClassifier(n_estimators=93)\n",
    "rfc.fit(X_train,y_train)\n",
    "y_pred=rfc.predict(X_test)\n",
    "print(\"RandomForest\")\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = rfc.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "input_cols = ['Attention', 'Mediation', 'Raw', 'Delta', 'Theta', 'Alpha1', 'Alpha2','Beta1', 'Beta2', 'Gamma1', 'Gamma2']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature: 0, Score: 0.08074\n",
      "Feature: 1, Score: 0.06914\n",
      "Feature: 2, Score: 0.08393\n",
      "Feature: 3, Score: 0.10098\n",
      "Feature: 4, Score: 0.09557\n",
      "Feature: 5, Score: 0.08927\n",
      "Feature: 6, Score: 0.08985\n",
      "Feature: 7, Score: 0.08814\n",
      "Feature: 8, Score: 0.09880\n",
      "Feature: 9, Score: 0.09658\n",
      "Feature: 10, Score: 0.10700\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 7200x720 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "importance = rfc.feature_importances_\n",
    "\n",
    "# summarize feature importance\n",
    "for i,v in enumerate(importance):\n",
    "    print('Feature: %0d, Score: %.5f' % (i,v))\n",
    "    \n",
    "# plot feature importance\n",
    "pyplot.bar([x for x in input_cols], importance)\n",
    "pyplot.figure(figsize=(100,10))\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree\n",
      "____________________________\n",
      "Accuracy: 0.5894473930689978\n",
      "Precision: 0.5911910669975186\n",
      "Recall: 0.5922933499067744\n",
      "F1 Score: 0.5917416951257374\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[935 659]\n",
      " [656 953]]\n",
      "____________________________\n",
      "False Positive Rate: 0.4134253450439147\n",
      "False Negative Rate: 0.4077066500932256\n",
      "____________________________\n",
      "AUC: 0.5894340024314298\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier \n",
    "dt = DecisionTreeClassifier()\n",
    "dt = dt.fit(X_train,y_train)\n",
    "y_pred = dt.predict(X_test)\n",
    "print(\"Decision Tree\")\n",
    "\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = dt.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature: 0, Score: 0.07338\n",
      "Feature: 1, Score: 0.06601\n",
      "Feature: 2, Score: 0.08514\n",
      "Feature: 3, Score: 0.11074\n",
      "Feature: 4, Score: 0.07987\n",
      "Feature: 5, Score: 0.08723\n",
      "Feature: 6, Score: 0.08908\n",
      "Feature: 7, Score: 0.09319\n",
      "Feature: 8, Score: 0.10585\n",
      "Feature: 9, Score: 0.10774\n",
      "Feature: 10, Score: 0.10176\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 7200x720 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "importance = dt.feature_importances_\n",
    "\n",
    "# summarize feature importance\n",
    "for i,v in enumerate(importance):\n",
    "    print('Feature: %0d, Score: %.5f' % (i,v))\n",
    "    \n",
    "# plot feature importance\n",
    "pyplot.bar([x for x in input_cols], importance)\n",
    "pyplot.figure(figsize=(100,10))\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GNB\n",
      "____________________________\n",
      "Accuracy: 0.5722759912581954\n",
      "Precision: 0.632630410654828\n",
      "Recall: 0.35425730267246736\n",
      "F1 Score: 0.4541832669322709\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[1263  331]\n",
      " [1039  570]]\n",
      "____________________________\n",
      "False Positive Rate: 0.2076537013801757\n",
      "False Negative Rate: 0.6457426973275326\n",
      "____________________________\n",
      "AUC: 0.612867317075453\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.naive_bayes import GaussianNB\n",
    "gnb = GaussianNB(priors=None , var_smoothing = 0.50)\n",
    "gnb.fit(X_train, y_train)\n",
    "y_pred = gnb.predict(X_test)\n",
    "print(\"GNB\")\n",
    "\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = gnb.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.00000000e+00  0.00000000e+00  0.00000000e+00  5.08897908e-02\n",
      "  1.71089603e-02  6.24414611e-05  4.37090228e-04 -6.24414611e-05\n",
      "  1.87324383e-04  0.00000000e+00  0.00000000e+00]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.inspection import permutation_importance\n",
    "\n",
    "imps = permutation_importance(gnb, X_test, y_test)\n",
    "print(imps.importances_mean)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN\n",
      "____________________________\n",
      "Accuracy: 0.5772713081486107\n",
      "Precision: 0.5728987993138936\n",
      "Recall: 0.622747047855811\n",
      "F1 Score: 0.5967837998808815\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[ 847  747]\n",
      " [ 607 1002]]\n",
      "____________________________\n",
      "False Positive Rate: 0.46863237139272274\n",
      "False Negative Rate: 0.37725295214418897\n",
      "____________________________\n",
      "AUC: 0.6045620112089072\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "knn = KNeighborsClassifier(n_neighbors=19)\n",
    "knn.fit(X_train, y_train)\n",
    "y_pred = knn.predict(X_test)\n",
    "print(\"KNN\")\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = knn.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GBC\n",
      "____________________________\n",
      "Accuracy: 0.6606306587574149\n",
      "Precision: 0.6522753792298717\n",
      "Recall: 0.694841516469857\n",
      "F1 Score: 0.6728859464339452\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[ 998  596]\n",
      " [ 491 1118]]\n",
      "____________________________\n",
      "False Positive Rate: 0.3739021329987453\n",
      "False Negative Rate: 0.30515848353014297\n",
      "____________________________\n",
      "AUC: 0.7144851770896611\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "gbc = GradientBoostingClassifier(random_state=42, learning_rate=0.01, max_depth=35, n_estimators=200,subsample=0.1 )\n",
    "gbc.fit(X_train, y_train)\n",
    "y_pred = gbc.predict(X_test)\n",
    "print(\"GBC\")\n",
    "\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = gbc.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature: 0, Score: 0.07452\n",
      "Feature: 1, Score: 0.06508\n",
      "Feature: 2, Score: 0.08713\n",
      "Feature: 3, Score: 0.10089\n",
      "Feature: 4, Score: 0.09837\n",
      "Feature: 5, Score: 0.09344\n",
      "Feature: 6, Score: 0.09453\n",
      "Feature: 7, Score: 0.09397\n",
      "Feature: 8, Score: 0.09544\n",
      "Feature: 9, Score: 0.09566\n",
      "Feature: 10, Score: 0.10096\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 7200x720 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "importance = gbc.feature_importances_\n",
    "\n",
    "# summarize feature importance\n",
    "for i,v in enumerate(importance):\n",
    "    print('Feature: %0d, Score: %.5f' % (i,v))\n",
    "    \n",
    "# plot feature importance\n",
    "pyplot.xticks(rotation=90)\n",
    "pyplot.bar([x for x in input_cols], importance)\n",
    "pyplot.figure(figsize=(100,10))\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "XGB\n",
      "____________________________\n",
      "Accuracy: 0.6537620980330939\n",
      "Precision: 0.6484560570071259\n",
      "Recall: 0.6786824114356743\n",
      "F1 Score: 0.6632250227755846\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[1002  592]\n",
      " [ 517 1092]]\n",
      "____________________________\n",
      "False Positive Rate: 0.3713927227101631\n",
      "False Negative Rate: 0.3213175885643257\n",
      "____________________________\n",
      "AUC: 0.714452425308393\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from xgboost import XGBClassifier\n",
    "xgb = XGBClassifier(colsample_bytree=0.7,gamma=0.3,learning_rate=0.05,max_depth=12)\n",
    "xgb.fit(X_train, y_train)\n",
    "y_pred = xgb.predict(X_test)\n",
    "print(\"XGB\")\n",
    "\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = xgb.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature: 0, Score: 0.12300\n",
      "Feature: 1, Score: 0.07893\n",
      "Feature: 2, Score: 0.08820\n",
      "Feature: 3, Score: 0.09429\n",
      "Feature: 4, Score: 0.08593\n",
      "Feature: 5, Score: 0.08344\n",
      "Feature: 6, Score: 0.08086\n",
      "Feature: 7, Score: 0.08490\n",
      "Feature: 8, Score: 0.09558\n",
      "Feature: 9, Score: 0.08850\n",
      "Feature: 10, Score: 0.09638\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 7200x720 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "importance = xgb.feature_importances_\n",
    "\n",
    "# summarize feature importance\n",
    "for i,v in enumerate(importance):\n",
    "    print('Feature: %0d, Score: %.5f' % (i,v))\n",
    "    \n",
    "# plot feature importance\n",
    "pyplot.xticks(rotation=90)\n",
    "pyplot.bar([x for x in input_cols], importance)\n",
    "pyplot.figure(figsize=(100,10))\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bagging\n",
      "____________________________\n",
      "Accuracy: 0.6709334998438964\n",
      "Precision: 0.6680799515445185\n",
      "Recall: 0.6855189558732132\n",
      "F1 Score: 0.6766871165644172\n",
      "____________________________\n",
      "Confusion Matrix: \n",
      " [[1046  548]\n",
      " [ 506 1103]]\n",
      "____________________________\n",
      "False Positive Rate: 0.3437892095357591\n",
      "False Negative Rate: 0.3144810441267868\n",
      "____________________________\n",
      "AUC: 0.7359787284978707\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.ensemble import BaggingClassifier\n",
    "bc = BaggingClassifier(base_estimator=rfc, n_estimators=20, random_state=1)\n",
    "bc.fit(X_train, y_train)\n",
    "\n",
    "y_pred = bc.predict(X_test)\n",
    "print(\"Bagging\")\n",
    "print(\"____________________________\")\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))\n",
    "print(\"Recall:\",metrics.recall_score(y_test, y_pred))\n",
    "print(\"F1 Score:\",metrics.f1_score(y_test, y_pred))\n",
    "print(\"____________________________\")\n",
    "print(\"Confusion Matrix: \\n\", metrics.confusion_matrix(y_test, y_pred))\n",
    "\n",
    "tpr = recall_score(y_test, y_pred) \n",
    "tnr = recall_score(y_test, y_pred, pos_label = 0) \n",
    "fpr = 1 - tnr\n",
    "fnr = 1 - tpr\n",
    "print(\"____________________________\")\n",
    "print(\"False Positive Rate:\",fpr)\n",
    "print(\"False Negative Rate:\",fnr)\n",
    "\n",
    "y_pred_prob = bc.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Compute and print AUC score\n",
    "print(\"____________________________\")\n",
    "print(\"AUC: {}\".format(roc_auc_score(y_test, y_pred_prob)))\n",
    "\n",
    "# Compute cross-validated AUC scores: cv_auc\n",
    "#cv_auc = cross_val_score(logreg, X, y, cv=5, scoring='roc_auc')\n",
    "\n",
    "# Print list of AUC scores\n",
    "#print(\"AUC scores computed using 5-fold cross-validation: {}\".format(cv_auc))\n",
    "\n",
    "# Generate ROC curve values: fpr, tpr, thresholds\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
    "\n",
    "# Plot ROC curve\n",
    "pyplot.plot([0, 1], [0, 1], 'k--')\n",
    "pyplot.plot(fpr, tpr)\n",
    "pyplot.xlabel('False Positive Rate')\n",
    "pyplot.ylabel('True Positive Rate')\n",
    "pyplot.title('ROC Curve')\n",
    "pyplot.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
